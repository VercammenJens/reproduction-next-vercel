import { FC } from 'react'
import { serverSideTranslations } from 'next-i18next/serverSideTranslations'
import Head from 'next/head'
import axios from 'axios'
import { useTranslation } from "next-i18next";

type Props = {
  questions: any[]
  slug: string
}

const DynamicMovePage: FC<Props> = ({ questions, slug }) => {
  const { t } = useTranslation('move')

  console.log('T_SLUG:', slug)
  console.log('T_QUESTIONS:', questions)

  return (
    <>
      <Head>
        <title>{slug} - Bolt homepage</title>
        <meta name="description" content="Generated by create next app"/>
        <meta name="viewport" content="width=device-width, initial-scale=1"/>
        <link rel="icon" href="/favicon.ico"/>
      </Head>
      <h1 style={{ marginBottom: '2rem' }}>{t(slug)}</h1>

      <div style={{ display: 'flex', flexDirection: 'column', gap: '1rem' }}>
        {questions.map((q) =>
          <div key={q.id}>
            <h3>{q.setup}</h3>
            <p>{q.punchline}</p>
          </div>
        )}
      </div>
    </>
  )
}

export const getStaticProps = async ({ locale, params }) => {
  let apiTestData = []
  try {
    const { data } = await axios.get('https://official-joke-api.appspot.com/jokes/programming/ten')
    apiTestData = data
  } catch (err) {
    apiTestData = []
  }

  return {
    props: {
      slug: params.slug,
      questions: apiTestData,
      ...(await serverSideTranslations(locale, ['move']))
    },
    revalidate: 60
  }
}

export const getStaticPaths = async () => {
  const IDS = [
    'test-1',
    'test-2',
    'test-3'
  ]

  const paths = IDS.map((id) => ([
    { locale: 'nl', params: { slug: id } },
    { locale: 'fr', params: { slug: id } }
    ])).flat()

  return {
    fallback: 'blocking',
    paths
  }
}

export default DynamicMovePage
